{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h11/HW11.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.css","p2-homeworks/h8/HW8.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h9/Clock.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/pages/Error/Error404.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/Header/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/bll/assets/greatSpinner.gif","p2-homeworks/h10/bll/assets/MySpinner.tsx","p2-homeworks/h10/HW10.tsx","p2-homeworks/h10/bll/store.ts","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","HW5","mainHeaders","navLinks","to","eachSingleLink","activeClassName","active","headerRemote","Message","props","all","message","ava","src","avatar","alt","msgFrame","userName","name","msgContent","clock","time","arrow","messageData","HW1","Affair","affairContainer","affair","onClick","deleteAffairCallback","_id","delBtn","Affairs","mappedAffairs","data","map","a","affairPriorityList","priorityBtnStack","setFilter","priorityBtn","defaultAffairs","v1","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","arrElement","filterAffairs","commonAffair","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","someClass","value","onChange","placeholder","onKeyPress","e","key","btn","errNotification","GreetingContainer","users","addUserCallback","setName","setError","setTotalUsers","event","inputValue","currentTarget","alert","HW3","setUsers","console","log","user","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","MainInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","setSpanClassName","inputSpanEditContainer","inputClassName","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","buttonContainer","restoreHandler","PreJunior","Error404","ErrorPage","SuperSelect","options","onChangeOption","mappedOptions","el","i","select","SuperRadio","onChangeCallback","o","singleItem","radioInput","radio","arr","HW7","homeWorkReducer","action","payload","sort","b","toLowerCase","age","sortNamesAC","initialPeople","HW8","people","setPeople","finalPeople","p","EachPerson","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","startApplication","setApplication","stop","clearInterval","addZero","num","stringTime","getHours","getMinutes","getSeconds","stringDate","getDate","getMonth","getFullYear","style","ClockStyle","onMouseEnter","onMouseLeave","ClockButtons","id","window","setInterval","HW9","initState","loading","loadingAC","loadingMode","MySpinner","greatSpinner","maxWidth","HW10","dispatch","useDispatch","useSelector","setTimeout","reducers","combineReducers","store","createStore","Junior","SuperRange","onChangeRange","finalRangeClassName","range","width","initialVal","SuperDoubleRange","min","max","value1","value2","setValue1","setValue2","minValRef","useRef","maxValRef","getPercent","useCallback","Math","round","useEffect","minPercent","maxPercent","current","left","Number","target","ref","HW11","SuperDoubleRangeContainer","valueStyle","PATH","Routes","path","exact","render","JuniorPlus","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.22d42b94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delBtn\":\"Affairs_delBtn__2rTr0\",\"affair\":\"Affairs_affair__23ala\",\"commonAffair\":\"Affairs_commonAffair__1WIpS\",\"affairPriorityList\":\"Affairs_affairPriorityList__37W4A\",\"priorityBtn\":\"Affairs_priorityBtn__dG7CL\",\"priorityBtnStack\":\"Affairs_priorityBtnStack__XsBoZ\",\"mappedAffairs\":\"Affairs_mappedAffairs__2v4Cb\",\"affairContainer\":\"Affairs_affairContainer__2J8TZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeaders\":\"Header_mainHeaders__2aGVD\",\"HW5\":\"Header_HW5__10ske\",\"navLinks\":\"Header_navLinks__gLxPW\",\"eachSingleLink\":\"Header_eachSingleLink__eLSIp\",\"active\":\"Header_active__R4Fgi\",\"headerRemote\":\"Header_headerRemote__30BeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Message_all__17uYw\",\"message\":\"Message_message__37nLh\",\"ava\":\"Message_ava__21NFu\",\"msgFrame\":\"Message_msgFrame__2wXM3\",\"arrow\":\"Message_arrow__2KG9w\",\"clock\":\"Message_clock__1Fqbp\",\"userName\":\"Message_userName__3gcUM\",\"msgContent\":\"Message_msgContent__1Nrrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSpanEditContainer\":\"SuperEditableSpan_inputSpanEditContainer__3R3D6\",\"spanClassName\":\"SuperEditableSpan_spanClassName__1Xvtf\",\"inputClassName\":\"SuperEditableSpan_inputClassName__ues18\",\"buttonContainer\":\"SuperEditableSpan_buttonContainer__2Ska2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainInput\":\"SuperInputText_MainInput__2tney\",\"input\":\"SuperInputText_input__3NdmP\",\"superInput\":\"SuperInputText_superInput__1ppvh\",\"errorInput\":\"SuperInputText_errorInput__2Pucj\",\"error\":\"SuperInputText_error__3rFAm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuperDoubleRangeContainer\":\"HW11_SuperDoubleRangeContainer__1i_O6\",\"valueStyle\":\"HW11_valueStyle__18xWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Greeting_btn__1Q11C\",\"someClass\":\"Greeting_someClass__iqsiG\",\"error\":\"Greeting_error__2NiVZ\",\"errNotification\":\"Greeting_errNotification__1kuxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioInput\":\"SuperRadio_radioInput__2PAvD\",\"radio\":\"SuperRadio_radio__2AAkf\",\"singleItem\":\"SuperRadio_singleItem__2Zn93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EachPerson\":\"HW8_EachPerson__1239e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__KTOSh\",\"red\":\"SuperButton_red__2Ixq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Tj-F\",\"spanClassName\":\"SuperCheckbox_spanClassName__3KZDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClockStyle\":\"Clock_ClockStyle__23_UF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3bf7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2XWu6\",\"column\":\"HW4_column__3ZWpk\",\"testSpanError\":\"HW4_testSpanError__1_3EW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorPage\":\"Error404_ErrorPage__2XLVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2MMh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__fIZP5\"};","import React, {useState} from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <div className={s.HW5}>HW 5</div>\r\n            <div className={s.mainHeaders}>\r\n                <nav className={s.navLinks}>\r\n                    <NavLink to='/pre-junior'\r\n                             className={s.eachSingleLink}\r\n                             activeClassName={s.active}>\r\n\r\n                        Pre-Junior\r\n                    </NavLink>\r\n\r\n                    <NavLink to='/junior'\r\n                             className={s.eachSingleLink}\r\n                             activeClassName={s.active}>\r\n\r\n                        Junior\r\n                    </NavLink>\r\n\r\n                    <NavLink to='/junior-plus'\r\n                             className={s.eachSingleLink}\r\n                             activeClassName={s.active}>\r\n\r\n                        Junior-plus\r\n                    </NavLink>\r\n                    {/*<button onClick={props.headerMenuRemoteHandler} className={s.headerRemote}/>*/}\r\n                    <button className={s.headerRemote}/>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype msgType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: msgType) {\r\n    return (\r\n        <div className={s.all}>\r\n            <div className={s.message}>\r\n                <div className={s.ava}>\r\n                    <img src={props.avatar} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            {/*<div className={s.arrow}></div>*/}\r\n            <div className={s.msgFrame}>\r\n                <div className={s.userName}>\r\n                    <b>{props.name}</b>\r\n                </div>\r\n                <div>\r\n                    <span className={s.msgContent}>\r\n                        {props.message}\r\n                    </span>\r\n                    <span className={s.clock}>\r\n                        {props.time}\r\n                    </span>\r\n                </div>\r\n                <div className={s.arrow}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Dimas',\r\n    message: 'Hey, mate, im trying to do my best',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {FilterType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype propsAffair = {\r\n    _id: string\r\n    name: string\r\n    priority: FilterType\r\n\r\n}\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: propsAffair // need to fix any\r\n    deleteAffairCallback: (_id: string) => void // need to fix any\r\n\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.affairContainer}>\r\n                <div className={s.affair}>\r\n                    {props.affair.name}\r\n                </div>\r\n                <button onClick={deleteCallback} className={s.delBtn}>DEL</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\nexport type AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: string) => void\r\n\r\n}\r\ntype propsAffair = {\r\n    _id: string\r\n    name: string\r\n    priority: FilterType\r\n\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: propsAffair) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div className={s.affairPriorityList}>\r\n\r\n            <div className={s.mappedAffairs}>{mappedAffairs}</div>\r\n            <div className={s.priorityBtnStack}>\r\n                <button onClick={setAll}\r\n                        className={s.priorityBtn}>ALL</button>\r\n                <button onClick={setHigh}\r\n                        className={s.priorityBtn}>HIGH</button>\r\n                <button onClick={setMiddle}\r\n                        className={s.priorityBtn}>MIDDLE</button>\r\n                <button onClick={setLow}\r\n                        className={s.priorityBtn}>LOW</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n    _id: string\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: v1(), name: 'React', priority: 'high'},\r\n    {_id: v1(), name: 'anime', priority: 'low'},\r\n    {_id: v1(), name: 'games', priority: 'low'},\r\n    {_id: v1(), name: 'work', priority: 'high'},\r\n    {_id: v1(), name: 'travel', priority: 'middle'}\r\n]\r\n\r\n\r\n\r\n// pure helper functions\r\nconst filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    if (filter === 'high') return affairs.filter(arrElement => arrElement.priority === 'high')\r\n    if (filter === 'middle') return affairs.filter(arrElement => arrElement.priority === 'middle')\r\n    if (filter === 'low') return affairs.filter(arrElement => arrElement.priority === 'low')\r\n    return affairs\r\n}\r\n\r\nconst deleteAffair = (affairs: Array<AffairType>, _id: string) => { // need to fix any\r\n    return affairs.filter(arrElement => arrElement._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n    const changeFilter = (nextFilter: FilterType) => {\r\n        setFilter(nextFilter)\r\n    }\r\n\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: string) => {\r\n        setAffairs(deleteAffair(affairs, _id))\r\n    } // need to fix any\r\n\r\n\r\n    return (\r\n        <div className={s.commonAffair}>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {log} from \"util\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (event: React.FormEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    //const inputClass = s.error // need to fix with (?:)\r\n    const inputClass = error ? s.error : s.someClass\r\n\r\n    const enterAdditionHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') addUser()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}\r\n                   placeholder={'Insert your name'}\r\n                   onKeyPress={enterAdditionHandler}\r\n            />\r\n            <button onClick={addUser} className={s.btn}>add</button>\r\n            <span> People in Array - {totalUsers}</span>\r\n            <div><b><span className={s.errNotification}>{error}</span></b></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (event: React.FormEvent<HTMLInputElement>) => { // need to fix any\r\n        const inputValue = event.currentTarget.value\r\n        setName(inputValue) // need to fix\r\n        setError('')\r\n    }\r\n    const addUser = () => {\r\n        if (name !== '') {\r\n            addUserCallback(name)\r\n            alert(`Hello ${name} !`) // need to fix\r\n            setName('')\r\n            setTotalUsers(totalUsers + 1)\r\n            setError('')\r\n        } else {\r\n            setError('Error: insert your name please')\r\n        }\r\n    }\r\n\r\n\r\n    //const totalUsers = 0 // need to fix\r\n    const [totalUsers, setTotalUsers] = useState(0)\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const user = {_id: v1(), name: name}\r\n        setUsers([...users, user]) // need to fix\r\n    }\r\n    console.log(users)\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter  // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.MainInput}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n\r\n\r\n\r\n\r\n// -------------------------------------------------------------------------------------->\r\n\r\n\r\n\r\n// import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\n// import s from './SuperInputText.module.css'\r\n//\r\n// // тип пропсов обычного инпута\r\n// type DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n//\r\n// // здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// // (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\n// type SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n//     onChangeText?: (value: string) => void\r\n//     onEnter?: () => void\r\n//     error?: string\r\n//     spanClassName?: string\r\n// }\r\n//\r\n// const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n//     {\r\n//         type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n//         onChange, onChangeText,\r\n//         onKeyPress, onEnter,\r\n//         error,\r\n//         className, spanClassName,\r\n//\r\n//         ...restProps// все остальные пропсы попадут в объект restProps\r\n//     }\r\n// ) => {\r\n//     const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n//         onChange // если есть пропс onChange\r\n//         && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n//\r\n//         onChangeText && onChangeText(e.currentTarget.value)\r\n//     }\r\n//     const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n//         onKeyPress && onKeyPress(e);\r\n//\r\n//         onEnter // если есть пропс onEnter\r\n//         && e.key === 'Enter' // и если нажата кнопка Enter\r\n//         && onEnter() // то вызвать его\r\n//     }\r\n//\r\n//     const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n//     const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n//\r\n//     return (\r\n//         <>\r\n//             <input\r\n//                 type={'text'}\r\n//                 onChange={onChangeCallback}\r\n//                 onKeyPress={onKeyPressCallback}\r\n//                 className={finalInputClassName}\r\n//\r\n//                 {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n//             />\r\n//             {error && <span className={finalSpanClassName}>{error}</span>}\r\n//         </>\r\n//     )\r\n// }\r\n//\r\n// export default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------------------>\r\n\r\n\r\n// import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\n// import s from './SuperButton.module.css'\r\n//\r\n// // тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\n// type DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n//\r\n// type SuperButtonPropsType = DefaultButtonPropsType & {\r\n//     red?: boolean\r\n// }\r\n//\r\n// const SuperButton: React.FC<SuperButtonPropsType> = (\r\n//     {\r\n//         red, className,\r\n//         ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n//     }\r\n// ) => {\r\n//     const finalClassName = `${red ? s.red : s.default} ${className}`\r\n//\r\n//     return (\r\n//         <button\r\n//             className={finalClassName}\r\n//             {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n//         />\r\n//     )\r\n// }\r\n//\r\n// export default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------------------------->\r\n\r\n\r\n// import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\n// import s from './SuperCheckbox.module.css'\r\n//\r\n// // тип пропсов обычного инпута\r\n// type DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n//\r\n// type SuperCheckboxPropsType = DefaultInputPropsType & {\r\n//     onChangeChecked?: (checked: boolean) => void\r\n//     spanClassName?: string\r\n// }\r\n//\r\n// const SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n//     {\r\n//         type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n//         onChange, onChangeChecked,\r\n//         className, spanClassName,\r\n//         children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n//\r\n//         ...restProps// все остальные пропсы попадут в объект restProps\r\n//     }\r\n// ) => {\r\n//     const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n//         // сделайте так чтоб работал onChange и onChangeChecked\r\n//     }\r\n//\r\n//     const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n//\r\n//     return (\r\n//         <label>\r\n//             <input\r\n//                 type={'checkbox'}\r\n//                 onChange={onChangeCallback}\r\n//                 className={finalInputClassName}\r\n//\r\n//                 {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n//             />\r\n//             {children && <span className={s.spanClassName}>{children}</span>}\r\n//         </label> // благодаря label нажатие на спан передастся в инпут\r\n//     )\r\n// }\r\n//\r\n// export default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n     const error = text ? '' : 'error'\r\n\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    const DefaultSettingsHandler = () => {\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                {/*<SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />*/}\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton onClick={DefaultSettingsHandler}>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled={!checked}>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    To disable button{/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                {/*<SuperCheckbox checked={checked}*/}\r\n                {/*               onChange={testOnChange} >*/}\r\n\r\n                {/*    To disable button*/}\r\n                {/*</SuperCheckbox>*/}\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n\r\n\r\n\r\n\r\n// --------------------------------------------------------------------------------------------->\r\n\r\n\r\n\r\n// import React, {ChangeEvent, useState} from 'react'\r\n// import SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\n// import s from './HW4.module.css'\r\n// import SuperButton from './common/c2-SuperButton/SuperButton'\r\n//\r\n// import SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n//\r\n// function HW4() {\r\n//     const [text, setText] = useState<string>('')\r\n//     const error = text ? '' : 'error'\r\n//\r\n//     const showAlert = () => {\r\n//         if (error) {\r\n//             alert('введите текст...')\r\n//         } else {\r\n//             alert(text) // если нет ошибки показать текст\r\n//         }\r\n//     }\r\n//\r\n//     const [checked, setChecked] = useState<boolean>(false)\r\n//     const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n//\r\n//     return (\r\n//         <div>\r\n//             <hr/>\r\n//             homeworks 4\r\n//\r\n//             <div className={s.column}>\r\n//                 <SuperInputText\r\n//                     value={text}\r\n//                     onChangeText={setText}\r\n//                     onEnter={showAlert}\r\n//                     error={error}\r\n//                     // spanClassName={s.testSpanError}\r\n//                 />\r\n//\r\n//                 <SuperInputText\r\n//                     className={s.blue} // проверьте, рабоет ли смешивание классов\r\n//                 />\r\n//\r\n//                 {/*----------------------------------------------------*/}\r\n//\r\n//                 <SuperButton>\r\n//                     default\r\n//                 </SuperButton>\r\n//\r\n//                 <SuperButton\r\n//                     red // пропсу с булевым значением не обязательно указывать true\r\n//                     onClick={showAlert}\r\n//                 >\r\n//                     delete {/*// название кнопки попадёт в children*/}\r\n//                 </SuperButton>\r\n//\r\n//                 <SuperButton disabled>\r\n//                     disabled\r\n//                 </SuperButton>\r\n//\r\n//                 {/*----------------------------------------------------*/}\r\n//\r\n//                 <SuperCheckbox\r\n//                     checked={checked}\r\n//                     onChangeChecked={setChecked}\r\n//                 >\r\n//                     some text {/*// этот текст попадёт в children*/}\r\n//                 </SuperCheckbox>\r\n//\r\n//                 {/*// onChange тоже должен работать*/}\r\n//                 <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n//             </div>\r\n//\r\n//             <hr/>\r\n//             {/*для личного творчества, могу проверить*/}\r\n//             {/*<AlternativeSuperInputText/>*/}\r\n//             {/*<AlternativeSuperButton/>*/}\r\n//             {/*<AlternativeSuperCheckbox/>*/}\r\n//             <hr/>\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\nimport {inspect} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const setSpanClassName = `${'сделать красивый стиль для спана'} ${s.spanClassName}`\r\n\r\n    return (\r\n        <div className={s.inputSpanEditContainer}>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        className={s.inputClassName}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span>✎ <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={setSpanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span></span>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\nimport s from './common/c4-SuperEditableSpan/SuperEditableSpan.module.css'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        let restoreHandler = restoreState<string>('editable-span-value', '')\r\n        setValue(restoreHandler)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    /*className={}*/\r\n                />\r\n            </div>\r\n            <div className={s.buttonContainer}>\r\n                <SuperButton onClick={save}>save</SuperButton>\r\n                <SuperButton onClick={restore}>restore</SuperButton>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.ErrorPage}>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n            <div>Please, chose an option from Header</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[] | undefined\r\n    onChangeOption: (option: string) => void | undefined\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] | undefined = options?.map((el, i) =>\r\n        <option key={i}>{el}</option>)\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        const onChange = e.currentTarget.value\r\n        //console.log(onChange)\r\n        onChangeOption(onChange)\r\n    }\r\n\r\n    return (\r\n        <h4>\r\n            <select onChange={onChangeCallback} {...restProps} className={s.select}>\r\n                {mappedOptions}\r\n            </select>\r\n        </h4>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps, useState} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[] | undefined\r\n    onChangeOption: (option: string) => void | undefined\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        const onChange = e.currentTarget.value\r\n        console.log(onChange)\r\n        onChangeOption(onChange)\r\n\r\n    }\r\n\r\n    const mappedOptions: JSX.Element[] | undefined  = options ? options.map((o, i) => (\r\n        <label key={i} className={s.singleItem}>\r\n            <input\r\n                type={name}\r\n                checked={value === o}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                className={s.radioInput}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <div className={s.radio}>\r\n            {mappedOptions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState<string>(arr[0])\r\n    // console.log(value)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {sortingPayload, UserType} from \"../HW8\";\r\n\r\ntype CommonActionType = sortNamesACType | CheckAgeACType\r\n\r\nexport const homeWorkReducer = (state: UserType[], action: CommonActionType): UserType[] => { // need to fix any\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            // need to fix\r\n            if (action.payload === 'up') {\r\n                return [...state.sort( (a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1 )]\r\n            } else if (action.payload === 'down') {\r\n                return [...state.sort( (a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? -1 : 1 )]\r\n            }\r\n            return state\r\n        }\r\n        case 'check': {\r\n            // need to fix\r\n            return [...state.filter(el => el.age >= action.age)]\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype sortNamesACType = ReturnType<typeof sortNamesAC>\r\nexport const sortNamesAC = (payload: sortingPayload) => {\r\n    return {type: 'sort', payload} as const\r\n}\r\n\r\ntype CheckAgeACType = ReturnType<typeof checkAgeAC>\r\nexport const checkAgeAC = (age: number) => {\r\n    return {type: 'check', age} as const\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport s from './HW8.module.css'\r\nimport {checkAgeAC, homeWorkReducer, sortNamesAC} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nexport type UserType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nconst initialPeople: UserType[] = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nexport type sortingPayload = 'up' | 'down'\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<UserType[]>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: UserType) => (\r\n        <div key={p._id}>\r\n            <div className={s.EachPerson}>\r\n                <span className={s.name}>{p.name}</span><span className={s.age}>  {p.age}</span>\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, sortNamesAC('up')))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, sortNamesAC('down')))\r\n    const checkAge = () => setPeople(homeWorkReducer(initialPeople, checkAgeAC(18)))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {finalPeople}\r\n            <div>\r\n                <SuperButton onClick={sortUp}>sort up</SuperButton>\r\n                <SuperButton onClick={sortDown}>sort down</SuperButton>\r\n                <SuperButton onClick={checkAge}>check 18</SuperButton>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport style from './Clock.module.css'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const [startApplication, setApplication] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)                                      // останавливает значения счетчика\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {       // запускает значения счетчика\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setTimerId(id)\r\n        setApplication(true)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        // show\r\n        setShow(false)\r\n    }\r\n    const onMouseLeave = () => {\r\n        // close\r\n        setShow(true)\r\n    }\r\n\r\n\r\n    const addZero = (num: number) => {\r\n        if (num < 10) {\r\n            return `${0}${num}`\r\n        } else return num\r\n    }\r\n\r\n    //const stringTime = timerId// fix with date\r\n    const stringTime = `${addZero(date.getHours())} : ${addZero(date.getMinutes())} : ${addZero(date.getSeconds())}`// fix with date\r\n    //const stringDate = 'Date' // fix with date\r\n    const stringDate = `${addZero(date.getDate())} / ${addZero((date.getMonth() + 1))} / ${addZero(date.getFullYear())}` // fix with date\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.ClockStyle}>\r\n            {\r\n                startApplication\r\n                    ?   <div>\r\n                            <div\r\n                                onMouseEnter={onMouseEnter}\r\n                                onMouseLeave={onMouseLeave}\r\n                            >\r\n\r\n                                {stringTime}\r\n                            </div>\r\n\r\n                            {!show && (\r\n                                <div>\r\n                                    {stringDate}\r\n                                </div>\r\n                            )}\r\n                            </div>\r\n                    : <div/>                        // При первом запуске приложения, надо будет надать старт для запуска часов\r\n            }\r\n                    <div className={style.ClockButtons}>\r\n                        <SuperButton onClick={start}>start</SuperButton>\r\n                        <SuperButton onClick={stop}>stop</SuperButton>\r\n                    </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","\r\n\r\nexport type loadingReducerStateType = {\r\n    loading: boolean\r\n}\r\n\r\nconst initState = {\r\n    loading: false\r\n}\r\nexport type MainLoadingActionType = loadingACType\r\nexport const loadingReducer = (state: loadingReducerStateType = initState, action: MainLoadingActionType): loadingReducerStateType => { // fix any\r\n    switch (action.type) {\r\n        case 'CHANGE-LOADING-MODE': {\r\n            return {...state, loading: !action.loadingMode}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\ntype loadingACType = {type: 'CHANGE-LOADING-MODE', loadingMode: boolean}\r\nexport const loadingAC = (loadingMode: boolean): loadingACType => {\r\n    return {type: 'CHANGE-LOADING-MODE', loadingMode}\r\n} // fix any","export default __webpack_public_path__ + \"static/media/greatSpinner.a8ff72a5.gif\";","import React from \"react\";\r\nimport greatSpinner from \"./greatSpinner.gif\";\r\n\r\nexport const MySpinner = (props: any) => {\r\n\r\n    const SpinnerStyle = {\r\n        maxWidth: '40px'\r\n    }\r\n\r\n    return <>\r\n        <img src={greatSpinner} style={SpinnerStyle}/>\r\n        </>\r\n\r\n}","import React from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport {loadingAC, loadingReducerStateType} from \"./bll/loadingReducer\";\r\nimport {MySpinner} from \"./bll/assets/MySpinner\";\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector<AppStoreType, loadingReducerStateType>(state => state.loading).loading\r\n\r\n    const setLoading = () => {\r\n        // dispatch\r\n        // setTimeout\r\n        dispatch(loadingAC(loading))\r\n        setTimeout(function timer() {\r\n            dispatch(loadingAC(!loading))\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    // <div>крутилка...</div>\r\n                    <div><MySpinner /></div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import { combineReducers, createStore } from 'redux'\r\nimport {loadingReducer} from './loadingReducer'\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"../../h10/bll/store\";\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            {/*Here is gona be tasks since 7-th lesson till 11th lesson when ill do it*/}\r\n            <HW7 />\r\n            <HW8 />\r\n            <HW9 />\r\n            <Provider store={store}>\r\n                <HW10 />\r\n            </Provider>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n    // setValue1: (value: number) => void\r\n    initialVal: number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n        // restProps.setValue1(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input style={ {width: '200px'} }\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.initialVal}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React, {\r\n    ChangeEvent,\r\n    FC,\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n} from \"react\";\r\nimport './SuperDoubleRange.css'\r\n\r\ninterface MultiRangeSliderProps {\r\n    min: number;\r\n    max: number;\r\n    value1: number\r\n    value2: number\r\n    setValue1: (value1: number) => void\r\n    setValue2: (value2: number) => void\r\n}\r\n\r\nconst SuperDoubleRange: FC<MultiRangeSliderProps> = ({\r\n                                                         min,\r\n                                                         max,\r\n                                                         value1,\r\n                                                         value2,\r\n                                                         setValue1,\r\n                                                         setValue2,\r\n                                                     }) => {\r\n\r\n    const minValRef = useRef(min);\r\n    const maxValRef = useRef(max);\r\n    const range = useRef<HTMLDivElement>(null);\r\n\r\n    const getPercent = useCallback(\r\n        (value: number) => Math.round(((value - min) / (max - min)) * 100),\r\n        [min, max]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const minPercent = getPercent(value1);\r\n        const maxPercent = getPercent(maxValRef.current);\r\n\r\n        if (range.current) {\r\n            range.current.style.left = `${minPercent}%`;\r\n            range.current.style.width = `${maxPercent - minPercent}%`;\r\n        }\r\n    }, [value1, getPercent]);\r\n\r\n    useEffect(() => {\r\n        const minPercent = getPercent(minValRef.current);\r\n        const maxPercent = getPercent(value2);\r\n\r\n        if (range.current) {\r\n            range.current.style.width = `${maxPercent - minPercent}%`;\r\n        }\r\n    }, [value2, getPercent]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={value1}\r\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                    const value = Math.min(Number(event.target.value), value2 - 1);\r\n                    setValue1(value);\r\n                    minValRef.current = value;\r\n                    //const minvalue = Math.min(Number(event.target.value), maxVal - 1);\r\n                }}\r\n                className=\"thumb thumb--left\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={value2}\r\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                    const value = Math.max(Number(event.target.value), value1 + 1);\r\n                    setValue2(value);\r\n                    maxValRef.current = value;\r\n                }}\r\n                className=\"thumb thumb--right\"\r\n            />\r\n            <div className=\"slider\">\r\n                <div className=\"slider__track\"></div>\r\n                <div ref={range} className=\"slider__range\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperDoubleRange;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n// import React, {\r\n//     ChangeEvent,\r\n//     FC,\r\n//     useCallback,\r\n//     useEffect,\r\n//     useState,\r\n//     useRef,\r\n// } from \"react\";\r\n// import './SuperDoubleRange.css'\r\n//\r\n// interface MultiRangeSliderProps {\r\n//     min: number;\r\n//     max: number;\r\n//     //setValue2: (MaxVal: number) => void\r\n// }\r\n//\r\n// const SuperDoubleRange: FC<MultiRangeSliderProps> = ({\r\n//                                                          min,\r\n//                                                          max,\r\n//                                                          //setValue2\r\n//                                                      }) => {\r\n//     const [minVal, setMinVal] = useState(min);\r\n//     const [maxVal, setMaxVal] = useState(max);\r\n//     const minValRef = useRef(min);\r\n//     const maxValRef = useRef(max);\r\n//     const range = useRef<HTMLDivElement>(null);\r\n//\r\n//     // Convert to percentage\r\n//     const getPercent = useCallback(\r\n//         (value: number) => Math.round(((value - min) / (max - min)) * 100),\r\n//         [min, max]\r\n//     );\r\n//\r\n//     // Set width of the range to decrease from the left side\r\n//     useEffect(() => {\r\n//         const minPercent = getPercent(minVal);\r\n//         const maxPercent = getPercent(maxValRef.current);\r\n//\r\n//         if (range.current) {\r\n//             range.current.style.left = `${minPercent}%`;\r\n//             range.current.style.width = `${maxPercent - minPercent}%`;\r\n//         }\r\n//     }, [minVal, getPercent]);\r\n//\r\n//     // Set width of the range to decrease from the right side\r\n//     useEffect(() => {\r\n//         const minPercent = getPercent(minValRef.current);\r\n//         const maxPercent = getPercent(maxVal);\r\n//\r\n//         if (range.current) {\r\n//             range.current.style.width = `${maxPercent - minPercent}%`;\r\n//         }\r\n//     }, [maxVal, getPercent]);\r\n//\r\n//     // Get min and max values when their state changes\r\n//     /*useEffect(() => {\r\n//         onChange({ min: minVal, max: maxVal });\r\n//     }, [minVal, maxVal, onChange]);*/\r\n//\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <input\r\n//                 type=\"range\"\r\n//                 min={min}\r\n//                 max={max}\r\n//                 value={minVal}\r\n//                 onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n//                     const value = Math.min(Number(event.target.value), maxVal - 1);\r\n//                     setMinVal(value);\r\n//                     minValRef.current = value;\r\n//                     //const minvalue = Math.min(Number(event.target.value), maxVal - 1);\r\n//                 }}\r\n//                 className=\"thumb thumb--left\"\r\n//                 /*style={{ zIndex: minVal > max - 100 && \"5\" }}*/\r\n//             />\r\n//             <input\r\n//                 type=\"range\"\r\n//                 min={min}\r\n//                 max={max}\r\n//                 value={maxVal}\r\n//                 onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n//                     const value = Math.max(Number(event.target.value), minVal + 1);\r\n//                     setMaxVal(value);\r\n//                     maxValRef.current = value;\r\n//                 }}\r\n//                 className=\"thumb thumb--right\"\r\n//             />\r\n//\r\n//             <div className=\"slider\">\r\n//                 <div className=\"slider__track\"></div>\r\n//                 <div ref={range} className=\"slider__range\"></div>\r\n//                 <div className=\"slider__left-value\">{minVal}</div>\r\n//                 <div className=\"slider__right-value\">{maxVal}</div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default SuperDoubleRange;\r\n","import React, {useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\nimport s from './HW11.module.css'\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState<number>(0)\r\n    const [value2, setValue2] = useState<number>(100)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.SuperDoubleRangeContainer}>\r\n                <span className={s.valueStyle}>{value1}</span>\r\n                <SuperRange\r\n                    // сделать так чтоб value1 изменялось\r\n                    onChangeRange={setValue1}\r\n                    initialVal={value1}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.SuperDoubleRangeContainer}>\r\n                <span className={s.valueStyle}>{value1}</span>\r\n                <SuperDoubleRange\r\n                    min={0}\r\n                    max={100}\r\n                    value1={value1}\r\n                    value2={value2}\r\n                    setValue1={setValue1}\r\n                    setValue2={setValue2}\r\n                />\r\n                <span className={s.valueStyle}>{value2}</span>\r\n            </div>\r\n\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW11 from \"../../h11/HW11\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Here is gona be tasks since 11-th lesson till the end\r\n            {/*<HW6/>*/}\r\n            <HW11 />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n\r\n    JUNIOR: '/junior',\r\n\r\n    JUNIOR_plus: '/junior-plus',\r\n\r\n    ERROR: '/Error'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} exact render={() => <PreJunior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR_plus} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header/Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}